# name: Android CI

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: gradle

#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Build and analyze
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#       run: ./gradlew build 
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-south-1  # replace with your preferred AWS region

#     - name: Upload APK to S3
#       uses: jakejarvis/s3-sync-action@master
#       with:
#         args: --follow-symlinks --delete
#       env:
#         AWS_S3_BUCKET: assement-q-3-android-apk  # replace with your S3 bucket name
#         SOURCE_DIR: app/build/outputs/apk/release/  # replace with the directory to your APK file
        
#     # - name: SonarCloud Scan
#     #   uses: sonarsource/sonarcloud-github-action@master
#     #   env:
#     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  sonar --info
#     #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
